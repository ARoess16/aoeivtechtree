.App {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.App-content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.footer {
  flex-shrink: 0;
}

.is-fixed-bottom {
  position: fixed;
  bottom: 0;

  left: 0;
  right: 0;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

body {
  color: #333;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.is-cursor-pointer {
  cursor: pointer !important;
}

.transform {
  -webkit-transform: translateX(0) translateY(0) rotate(0) skewX(0) skewY(0)
    scaleX(1) scaleY(1);
  transform: translateX(0) translateY(0) rotate(0) skewX(0) skewY(0) scaleX(1)
    scaleY(1);
}

.is-duration-300 {
  transition-duration: 0.3s;
}

.shadow-md {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
}

.hover-translate-y:hover {
  -webkit-transform: translateX(0) translateY(-0.25rem) rotate(0) skewX(0)
    skewY(0) scaleX(1) scaleY(1) !important;
  transform: translateX(0) translateY(-0.25rem) rotate(0) skewX(0) skewY(0)
    scaleX(1.1) scaleY(1.1) !important;
}

.hover-shadow-xl:hover {
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04) !important;
}

.fixedwidth {
  width: 300px;
}

.leftsideflagwidth {
  width: 50;
}

.is-fullheight-100vh {
  height: 100vh;
}

.mainbg {
  background-color: #151824;
  border: 4px solid #d4ad58;
}

.cardflags {
  background-color: #151824;
}

.has-text-gold {
  color: #d4ad58;
}

html,
body,
#root {
  height: 100%;
}

.columns.is-fullheight {
  flex: 1;
}

.main {
  overflow-y: auto;
}

.is-fixed-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

.leftside-font-size {
  font-size: 20px;
}

.bpcss {
  font-size: 14px;
  font-weight: normal;
}

.leftsidecss {
  font-size: 18px;
  font-weight: bold;
  color: white;
  background-color: #151824;
  border: 4px solid #d4ad58;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

.dropdown {
  /* Set the font size and color */
  font-size: 16px;
  color: #333;
  /* Set the width of the select element */
  width: 50%;
  /* Add some padding to make it look nicer */
  padding: 8px;
  /* Set the border to have rounded corners */
  border-radius: 4px;
  /* Remove the default arrow that appears in some browsers */
  appearance: none;
  -webkit-appearance: none;
  background-color: #151824;
  background-repeat: no-repeat;
  background-position: right center;
}

/* Style the options within the dropdown */
select option {
  /* Set the font size and color of the options */
  font-size: 14px;
  color: #555;
}

/* Style the dropdown when it's open */
select:focus {
  /* Add a border around the select element when it's in focus */
  border: 1px solid #007bff;
  /* You can add more styles here to customize the appearance when the select is open */
}

/* Style the dropdown arrow */
select::-ms-expand {
  /* Remove the default arrow in Internet Explorer */
  display: none;
}

select::after {
  /* Create a custom arrow using a pseudo-element after the select element */
  content: "";
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 6px 5px 0;
  border-color: #333 transparent transparent;
  position: absolute;
  top: 50%;
  right: 10px;
  pointer-events: none;
  transform: translateY(-50%);
}

/* Style the dropdown list */
select option:checked {
  /* Set the background color of the selected option */
  background-color: #007bff;
  /* Set the font color of the selected option */
  color: #fff;
}

.column.is-one-fourth {
  flex: none;
  width: 25%; /* 4 columns will take up 25% of the container width */
  max-width: 25%; /* Ensure the column won't grow beyond 25% */
}

.building-grid-container {
  height: auto;
  max-height: 400px; /* Set the maximum height to enable scrolling */
}

.building-name {
  background-color: rgb(8, 66, 8);
  color: white;
  padding: 8px;
  margin: 4px;
  display: flex; /* Set the display to flex */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
}

.blue-box {
  background-color: blue;
  color: white;
  padding: 8px;
  margin-left: 4px;
  margin-right: 4px;
  display: flex; /* Set the display to flex */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  text-align: center;
  height: 110px;
  width: 110px;
}

.connecting-line {
  position: relative;
  width: 4px;
  min-height: 100px;
  flex-grow: 1;
  background-color: #d4ad58; /* Or any other color you want */
  margin: 0 auto; /* Centers the line horizontally */
}

.rscontainer {
  /* overflow-y: auto; */
  overflow-x: auto;
}

.building-grid-container {
  display: flex;
  flex-wrap: nowrap;
  justify-content: flex-start;
}

.building-grid {
  display: flex;
  flex-direction: column;
  align-items: center;
  border: 2px solid gold;
  margin: 10px;
  width: 300px; /* Set a fixed width for each building grid */
}

.grid-row {
  display: flex;
}

.grid-element {
  width: 100px;
  height: 100px;
  background-color: brown;
  margin: 2px;
}

/* Gold connecting lines */
.grid-row:not(:last-child) .grid-element {
  border-bottom: 2px solid gold;
}

.parent {
  height: 1100px; /* Set the desired height of the parent div */
  display: flex;
  flex-direction: column;
}

.child {
  flex: 1;
  background-color: brown; /* For brown boxes, you can change the color as needed */
  border: 1px solid gold; /* Adding gold borders as per your request */
}
